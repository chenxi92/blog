import{r as t,o,c as p,a as n,e as a,F as i,d as l,b as e}from"./app.01142347.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const c={},u=l(`<h1 id="sending-push-notifications-using-command-line-tools" tabindex="-1"><a class="header-anchor" href="#sending-push-notifications-using-command-line-tools" aria-hidden="true">#</a> Sending Push Notifications Using Command-Line Tools</h1><h2 id="premise" tabindex="-1"><a class="header-anchor" href="#premise" aria-hidden="true">#</a> Premise</h2><ol><li><p>Prepare a DER-encoded certificate file. The file extension is <code>cer</code> .</p></li><li><p>Prepare a private key file. The file extension is <code>pem</code> .</p></li></ol><p>\u26A0\uFE0F If you export the certificate file and get the exported file with <code>p12</code> extension. You can use the following command to convert the <code>p12</code> file to <code>pem</code> file.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>openssl pkcs12 -in <span class="token operator">&lt;</span>absolute-path-of-p12-file<span class="token operator">&gt;</span> -out <span class="token operator">&lt;</span>absolute-path-of-pem-file<span class="token operator">&gt;</span> -nodes -passin <span class="token string">&#39;pass:&lt;password-of-p12-file&gt;&#39;</span>

<span class="token comment"># if the password of p12 file is empty, use the following command</span>
<span class="token comment"># openssl pkcs12 -in &lt;absolute-path-of-p12-file&gt; -out &lt;absolute-path-of-pem-file&gt; -nodes -passin &#39;pass:&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ol start="3"><li>Prepare a device token from your app, as a hexadecimal-encoded ASCII string.</li></ol><h2 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> Code</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#! /bin/bash</span>

<span class="token assign-left variable">CERTIFICATE_FILE_NAME</span><span class="token operator">=</span><span class="token string">&quot;&lt;absolute-path-of-cer-file&quot;</span>
<span class="token assign-left variable">CERTIFICATE_KEY_FILE_NAME</span><span class="token operator">=</span><span class="token string">&quot;&lt;absolute-path-of-pem-file&quot;</span>
<span class="token assign-left variable">TOPIC</span><span class="token operator">=</span><span class="token string">&quot;&lt;your-apps-bundle-id&gt;&quot;</span>
<span class="token assign-left variable">DEVICE_TOKEN</span><span class="token operator">=</span><span class="token string">&quot;&lt;your-device-token-with-hexadecimal-fromat&gt;&quot;</span>
<span class="token assign-left variable">APNS_HOST_NAME</span><span class="token operator">=</span><span class="token string">&quot;api.sandbox.push.apple.com&quot;</span>

<span class="token function">curl</span> -v <span class="token punctuation">\\</span>
--header <span class="token string">&quot;apns-topic: <span class="token variable">\${TOPIC}</span>&quot;</span> <span class="token punctuation">\\</span>
--header <span class="token string">&quot;apns-push-type: alert&quot;</span> <span class="token punctuation">\\</span>
--cert <span class="token string">&quot;<span class="token variable">\${CERTIFICATE_FILE_NAME}</span>&quot;</span> <span class="token punctuation">\\</span>
--cert-type DER <span class="token punctuation">\\</span>
--key <span class="token string">&quot;<span class="token variable">\${CERTIFICATE_KEY_FILE_NAME}</span>&quot;</span> <span class="token punctuation">\\</span>
--key-type PEM <span class="token punctuation">\\</span>
--data <span class="token string">&#39;{&quot;aps&quot;:{&quot;alert&quot;:&quot;test&quot;}}&#39;</span> <span class="token punctuation">\\</span>
--http2 <span class="token string">&quot;https://<span class="token variable">\${APNS_HOST_NAME}</span>/3/device/<span class="token variable">\${DEVICE_TOKEN}</span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference" aria-hidden="true">#</a> Reference</h2>`,9),d={href:"https://developer.apple.com/documentation/usernotifications/sending_push_notifications_using_command-line_tools",target:"_blank",rel:"noopener noreferrer"},b=e("Sending Push Notifications Using Command-Line Tool"),h={href:"https://developer.apple.com/documentation/usernotifications/setting_up_a_remote_notification_server/sending_notification_requests_to_apns/",target:"_blank",rel:"noopener noreferrer"},m=e("Sending Notification Requests to APNs");function f(k,g){const s=t("ExternalLinkIcon");return o(),p(i,null,[u,n("p",null,[n("a",d,[b,a(s)])]),n("p",null,[n("a",h,[m,a(s)])])],64)}var v=r(c,[["render",f]]);export{v as default};
