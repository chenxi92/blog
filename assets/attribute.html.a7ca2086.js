import{r as t,o as e,c as p,a as n,e as o,F as c,d as a,b as i}from"./app.01142347.js";import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";const u={},r=a(`<h3 id="attribute" tabindex="-1"><a class="header-anchor" href="#attribute" aria-hidden="true">#</a> <code>__attribute__</code></h3><p><code>__attribute__</code> \u7528\u4E8E\u4FEE\u9970 \u53D8\u91CF\u3001\u7ED3\u6784\u4F53\u3001\u51FD\u6570\u3001\u7C7B\u578B\u7684\u5173\u952E\u5B57\u3002</p><p>\u8BED\u6CD5\u5F62\u5F0F\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">__attribute__</span><span class="token punctuation">(</span><span class="token punctuation">(</span>attribute1<span class="token punctuation">,</span> attribute2<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">__attribute__</span><span class="token punctuation">(</span><span class="token punctuation">(</span>__attribute1__<span class="token punctuation">,</span> __attribute2__<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u5E38\u89C1\u7528\u6CD5</p>`,5),d=a("<li><code>__attribute__((alias))</code></li><li><code>__attribute__((always_inline))</code></li><li><code>__attribute__((const))</code></li><li><code>__attribute__((constructor(priority)))</code></li><li><code>__attribute__((deprecated))</code></li><li><code>__attribute__((malloc))</code></li><li><code>__attribute__((nonull))</code></li><li><code>__attribute__((unused))</code></li><li><code>__attribute__((used))</code></li>",9),k={href:"https://www.keil.com/support/man/docs/armclang_ref/armclang_ref_chr1383738420227.htm",target:"_blank",rel:"noopener noreferrer"},b=i("\u66F4\u591A\u7528\u6CD5..."),_=a(`<h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p><code>__attribute__((constructor))</code> \u4FEE\u9970\u7684\u51FD\u6570\u4F1A\u5728main\u51FD\u6570\u4E4B\u524D\u8C03\u7528\u3002</p><h4 id="\u8BED\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u8BED\u6CD5" aria-hidden="true">#</a> \u8BED\u6CD5</h4><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>__attribute__((constructor(priority))
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>priority</code> \u8868\u793A\u8C03\u7528\u7684\u4F18\u5148\u7EA7\uFF0C\u662F\u4E00\u4E2A\u53EF\u9009\u7684\u6574\u6570\u3002</p><p><code>priority</code> \u503C\u8D8A\u5C0F\u4F18\u5148\u7EA7\u8D8A\u9AD8\u3002</p><p>\u6709 <code>priority</code> \u4FEE\u9970\u7684\u4F18\u5148\u7EA7\u9AD8\u4E8E\u6CA1\u6709\u7684\u3002</p><p><code>priority</code> \u5C0F\u4E8E100\u7684\u7528\u4F5C\u4FDD\u7559\u5B57\u6BB5\u3002</p><h4 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token keyword">void</span> <span class="token function">my_constructor1</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token keyword">__attribute__</span><span class="token punctuation">(</span><span class="token punctuation">(</span>constructor<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">my_constructor2</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token keyword">__attribute__</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token number">102</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">my_constructor3</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token keyword">__attribute__</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token number">103</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">my_constructor1</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token comment">/* This is the 3rd constructor */</span>
<span class="token punctuation">{</span>                        <span class="token comment">/* function to be called */</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Called my_constructor1()\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">my_constructor2</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token comment">/* This is the 1st constructor */</span>
<span class="token punctuation">{</span>                         <span class="token comment">/* function to be called */</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Called my_constructor2()\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">my_constructor3</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token comment">/* This is the 2nd constructor */</span>
<span class="token punctuation">{</span>                         <span class="token comment">/* function to be called */</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Called my_constructor3()\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Called main()\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u4E0A\u9762\u7A0B\u5E8F\u4EA7\u751F\u5982\u4E0B\u8F93\u51FA:</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>Called <span class="token function">my_constructor2</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
Called <span class="token function">my_constructor3</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
Called <span class="token function">my_constructor1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
Called <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="\u53C2\u8003\u8D44\u6599" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u8D44\u6599" aria-hidden="true">#</a> \u53C2\u8003\u8D44\u6599</h4><p>https://www.keil.com/support/man/docs/armclang_ref/armclang_ref_chr1383738546439.htm</p><h3 id="unused" tabindex="-1"><a class="header-anchor" href="#unused" aria-hidden="true">#</a> unused</h3><p>\u5982\u679C\u51FD\u6570\u3001\u53D8\u91CF\u7B49\uFF0C\u672A\u88AB\u5F15\u7528\uFF0C\u7528 <code>__attrubute__((unused))</code> \u4FEE\u9970\u53EF\u4EE5\u963B\u6B62\u7F16\u8BD1\u5668\u751F\u6210\u8B66\u544A\u3002</p><h4 id="example-1" tabindex="-1"><a class="header-anchor" href="#example-1" aria-hidden="true">#</a> Example</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> a <span class="token keyword">__attribute__</span><span class="token punctuation">(</span><span class="token punctuation">(</span>unused<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="\u53C2\u8003\u8D44\u6599-1" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u8D44\u6599-1" aria-hidden="true">#</a> \u53C2\u8003\u8D44\u6599</h4><p>https://www.keil.com/support/man/docs/armclang_ref/armclang_ref_chr1393261558987.htm</p><h3 id="cleanup" tabindex="-1"><a class="header-anchor" href="#cleanup" aria-hidden="true">#</a> cleanup</h3><p>\u7528\u4E8E\u4FEE\u9970\u4E00\u4E2A\u53D8\u91CF\uFF0C\u5728\u5B83\u7684\u4F5C\u7528\u57DF\u7ED3\u675F\u540E\u81EA\u52A8\u6267\u884C\u4E00\u4E2A\u6307\u5B9A\u7684\u65B9\u6CD5\u3002</p><blockquote><p>The <code>cleanup</code> attribute runs a function when the variable goes out of scope. This attribute can only be applied to auto function scope variables; it may not be applied to parameters or variables with static storage duration. The function must take one parameter, a pointer to a type compatible with the variable. The return value of the function (if any) is ignored.</p></blockquote><h4 id="example-2" tabindex="-1"><a class="header-anchor" href="#example-2" aria-hidden="true">#</a> Example</h4><div class="language-objective ext-objective line-numbers-mode"><pre class="language-objective"><code>static void stringCleanUp(__strong NSString **string) {
    NSLog(@&quot;%@&quot;, *string);
}

static void blockCleanUp(__strong void(^*block)(void)) {
  	NSLog(@&quot;call block&quot;);
    (*block)();
}

- (void)test {
    __strong NSString *string __attribute__((cleanup(stringCleanUp), unused)) = @&quot;peak&quot;;
    void (^block)(void)  __attribute__((cleanup(blockCleanUp), unused)) = ^ {
        NSLog(@&quot;this is a block implementation.&quot;);
    };
}
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h4 id="\u53C2\u8003" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a> \u53C2\u8003</h4><p>https://nshipster.com/<strong>attribute</strong>/</p>`,27);function m(h,f){const s=t("ExternalLinkIcon");return e(),p(c,null,[r,n("ul",null,[d,n("li",null,[n("a",k,[b,o(s)])])]),_],64)}var y=l(u,[["render",m]]);export{y as default};
