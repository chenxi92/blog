import{r as t,o as i,c as l,a as e,e as s,F as r,d as o,b as a}from"./app.01142347.js";import{_ as d}from"./plugin-vue_export-helper.21dcd24c.js";const c={},p=o(`<h1 id="download-xcappdata-folder" tabindex="-1"><a class="header-anchor" href="#download-xcappdata-folder" aria-hidden="true">#</a> Download <code>xcappdata</code> folder</h1><p>How can you download the <code>xcappdata</code> folder from an iOS device by using command line?</p><h2 id="_1-install-libimobiledevice" tabindex="-1"><a class="header-anchor" href="#_1-install-libimobiledevice" aria-hidden="true">#</a> 1. install <code>libimobiledevice</code></h2><p>If <code>libimobiledevice</code> is not already installed, you can install it by using a package manager like Homebrew on macOS:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>brew <span class="token function">install</span> libimobiledevice
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="_2-install-ifuse" tabindex="-1"><a class="header-anchor" href="#_2-install-ifuse" aria-hidden="true">#</a> 2. install <code>ifuse</code></h2>`,6),u=a("Currently "),h=e("code",null,"ifuse",-1),b=a(" is not directly compatible with macOS. To use it "),m={href:"https://gist.github.com/cbatson/01a20a44c5c1a70ed3218c32d643e65d",target:"_blank",rel:"noopener noreferrer"},f=a("follow these steps"),g=o(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>brew uninstall osxfuse
brew <span class="token function">install</span> --cask macfuse
brew <span class="token function">install</span> gromgit/fuse/ifuse-mac
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>After running the above commands, restart your computer.</p><p>If you encounter the following error:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ ifuse -h
dyld<span class="token punctuation">[</span><span class="token number">1352</span><span class="token punctuation">]</span>: Library not loaded: /opt/homebrew/opt/libplist/lib/libplist-2.0.3.dylib
  Referenced from: <span class="token operator">&lt;</span>04812DE0-30A0-367A-A4D5-0FCD978A3B1E<span class="token operator">&gt;</span> /opt/homebrew/Cellar/ifuse-mac/1.1.4/bin/ifuse
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Run this command to resolve it:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">(</span> <span class="token builtin class-name">cd</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span>brew --prefix<span class="token variable">)</span></span>/opt/libplist/lib/&quot;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">ln</span> -s libplist-2.0.4.dylib libplist-2.0.3.dylib <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="_3-find-the-app-s-bundle-identifier" tabindex="-1"><a class="header-anchor" href="#_3-find-the-app-s-bundle-identifier" aria-hidden="true">#</a> 3. Find the App&#39;s Bundle Identifier</h2><p>Use the <code>ideviceinstaller</code> tool to list installed apps and find the bundle identifier of the app whose data you want to download</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>ideviceinstaller -l
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="_4-download-the-app-s-data-container" tabindex="-1"><a class="header-anchor" href="#_4-download-the-app-s-data-container" aria-hidden="true">#</a> 4. Download the App&#39;s Data Container</h2><p>Use the <code>ifuse</code> tool to mount the app&#39;s data container and copy it to your computer</p><ul><li>Mount the app&#39;s data container</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>ifuse <span class="token operator">&lt;</span>folder-to-mount<span class="token operator">&gt;</span> --container <span class="token operator">&lt;</span>bundle-identifier<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>Copy the <code>xcappdata</code> folder</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">cp</span> -r <span class="token operator">&lt;</span>folder-to-mount<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>destination-path<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference" aria-hidden="true">#</a> Reference</h2>`,16),_={href:"https://til.simonwillison.net/macos/ifuse-iphone",target:"_blank",rel:"noopener noreferrer"},v=a("Browse files (including SQLite databases) on your iPhone with ifuse"),k={href:"https://gist.github.com/cbatson/01a20a44c5c1a70ed3218c32d643e65d",target:"_blank",rel:"noopener noreferrer"},w=a("How to install ifuse on mayos");function x(y,A){const n=t("ExternalLinkIcon");return i(),l(r,null,[p,e("p",null,[u,h,b,e("a",m,[f,s(n)])]),g,e("ul",null,[e("li",null,[e("p",null,[e("a",_,[v,s(n)])])]),e("li",null,[e("p",null,[e("a",k,[w,s(n)])])])])],64)}var D=d(c,[["render",x]]);export{D as default};
