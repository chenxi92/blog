import{r as s,o as c,c as i,a as e,e as n,F as r,d as o,b as a}from"./app.01142347.js";import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";var d="/blog/assets/index.73a430e8.jpg";const p={},h=o('<h2 id="git\u57FA\u672C\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#git\u57FA\u672C\u6982\u5FF5" aria-hidden="true">#</a> Git\u57FA\u672C\u6982\u5FF5</h2><ul><li>\u5DE5\u4F5C\u533A(Working Directory)</li></ul><blockquote><p>\u5728\u7535\u8111\u91CC\u9762\u80FD\u591F\u770B\u5230\u7684\u76EE\u5F55</p></blockquote><ul><li>\u7248\u672C\u5E93\uFF08Repository\uFF09</li></ul><blockquote><p>\u5DE5\u4F5C\u533A\u53C8\u4E00\u4E2A\u9690\u85CF\u6587\u4EF6\u5939<code>.git</code>, \u53EB\u505AGit\u7684\u7248\u672C\u5E93\u3002<br> Git\u7684\u7248\u672C\u5E93\u5B58\u653E\u5F88\u591A\u4E1C\u897F\uFF0C \u5176\u4E2D\u6BD4\u4EF7\u91CD\u8981\u7684\u5C31\u662Fstage\uFF08\u6216\u8005index) \u7684\u6682\u5B58\u533A\uFF0C \u8FD8\u6709Git\u4E3A\u6211\u4EEC\u81EA\u52A8\u521B\u5EFA\u7684\u7B2C\u4E00\u4E2A\u5206\u652F<code>master</code>\uFF0C \u4EE5\u53CA\u6307\u5411<code>master</code>\u7684\u6307\u9488<code>HEAD</code>\u3002</p></blockquote><p><img src="'+d+'" alt="index"></p><ul><li>\u8FDC\u7A0B\u4ED3\u5E93\u533A(Remote)</li></ul><blockquote><p>\u4EE3\u7801\u6258\u7BA1\u7684\u670D\u52A1\u5668</p></blockquote><h2 id="\u5E38\u89C1\u547D\u4EE4" tabindex="-1"><a class="header-anchor" href="#\u5E38\u89C1\u547D\u4EE4" aria-hidden="true">#</a> \u5E38\u89C1\u547D\u4EE4</h2>',9),u=o("<li><p><code>git clone &lt;remote-url&gt;</code> \u514B\u9686\u67D0\u4E2A\u8FDC\u7AEF\u4ED3\u5E93</p></li><li><p><code>git add &lt;file path&gt;</code> \u628A\u5DE5\u4F5C\u533A\u4E2D\u4FEE\u6539\u7684\u6587\u4EF6\u6DFB\u52A0\u5230\u6682\u5B58\u533A</p></li><li><p><code>git commit -m &#39;xx&#39;</code> \u628A\u6682\u5B58\u533A\u4E2D\u7684\u5185\u5BB9\u63D0\u4EA4\u5230\u5F53\u524D\u5206\u652F</p></li><li><p><code>git pull</code> \u62C9\u53D6\u8FDC\u7AEF\u4EE3\u7801\uFF0C\u5E76\u81EA\u52A8\u5408\u5E76</p></li><li><p><code>git push origin master</code> \u5F53\u524D\u5206\u652F(\u9ED8\u8BA4\u662F<code>master</code>\u5206\u652F)\u4EE3\u7801\u63A8\u9001\u5230\u8FDC\u7AEF\u4ED3\u5E93</p></li><li><p><code>git push origin local_branch_name:local_branch_name</code> \u628A\u672C\u5730\u7684 <code>local_branch_name</code> \u5206\u652F\u63A8\u9001\u5230\u8FDC\u7AEF\u7684 <code>local_branch_name</code> \u5206\u652F\uFF0C \u8FDC\u7AEF\u6CA1\u6709 <code>local_branch_name</code> \u4F1A\u81EA\u52A8\u521B\u5EFA</p></li>",6),b=e("code",null,"git rebase",-1),m=a(),g={href:"https://git-scm.com/book/zh/v2/Git-%E5%88%86%E6%94%AF-%E5%8F%98%E5%9F%BA",target:"_blank",rel:"noopener noreferrer"},k=a("\u53D8\u57FA\u64CD\u4F5C"),f=o(`<p>\u4F5C\u7528\uFF1A\u628A\u672C\u5730\u672A push \u7684\u5206\u53C9\u63D0\u4EA4\u5386\u53F2\u6574\u7406\u6210\u76F4\u7EBF\uFF1B</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>\u628A experiment \u5206\u652F\u5408\u5E76\u5230 master \u5206\u652F\u4E0A\u4F7F\u7528rebase\u64CD\u4F5C\u6D41\u7A0B:
<span class="token number">1</span>. <span class="token function">git</span> checkout experiment
<span class="token number">2</span>. <span class="token function">git</span> rebase master
<span class="token number">3</span>. <span class="token function">git</span> checkout master
<span class="token number">4</span>. <span class="token function">git</span> merge experiment

<span class="token comment"># \u53D1\u751F\u51B2\u7A81\u4E4B\u540E\uFF0C\u89E3\u51B3\u5B8C\u6BD5\u540E,\u4E0D\u518D\u4F7F\u7528 git commit \u547D\u4EE4\uFF0C\u800C\u662F\u7EE7\u7EED\u6267\u884C rebase \u64CD\u4F5C</span>
<span class="token function">git</span> rebase --continue 
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,2),q=o(`<h2 id="\u7248\u672C\u56DE\u9000" tabindex="-1"><a class="header-anchor" href="#\u7248\u672C\u56DE\u9000" aria-hidden="true">#</a> \u7248\u672C\u56DE\u9000</h2><ul><li><code>git reset --hard HEAD^</code> \u628A\u5F53\u524D\u5206\u652F\u6307\u5411\u4E0A\u4E00\u4E2A\u7248\u672C\uFF0C</li><li><code>git reset --hard HEAD~100</code>, \u628A\u5F53\u524D\u5206\u652F\u56DE\u9000\u5F80\u4E0A100\u4E2A\u7248\u672C\uFF0C</li><li><code>git reset --hard xxxx</code>, \u628A\u5F53\u524D\u5206\u652F\u6307\u5230\u6307\u5B9A\u7248\u672C</li></ul><p><code>git rest</code> \u7684\u539F\u7406\u662F: \u8BA9\u6700\u65B0\u63D0\u4EA4\u7684\u6307\u9488\u56DE\u5230\u4EE5\u524D\u67D0\u4E2A\u65F6\u70B9\uFF0C\u8BE5\u65F6\u70B9\u4E4B\u540E\u7684\u63D0\u4EA4\u90FD\u4ECE\u5386\u53F2\u4E2D\u6D88\u5931\u3002</p><p>\u9ED8\u8BA4\u60C5\u51B5\u4E0B, <code>git reset</code> \u4E0D\u6539\u53D8\u5DE5\u4F5C\u533A\u7684\u6587\u4EF6(\u4F46\u4F1A\u6539\u53D8\u6682\u5B58\u533A)\uFF0C <code>--hard</code> \u53C2\u6570\u53EF\u4EE5\u8BA9\u5DE5\u4F5C\u533A\u7684\u6587\u4EF6\u4E5F\u56DE\u5230\u4EE5\u524D\u7684\u72B6\u6001\u3002</p><p>\u53E6\u4E00\u79CD\u5E38\u89C1\u573A\u666F\u662F\uFF0C\u63D0\u4EA4\u4EE3\u7801\u4E4B\u540E\uFF0C\u7A81\u7136\u610F\u8BC6\u5230\u8FD9\u4E2A\u63D0\u4EA4\u6709\u95EE\u9898\uFF0C\u5E94\u8BE5\u64A4\u9500\u6389\uFF0C \u9700\u8981\u6267\u884C <code>git revert HEAD</code> .</p><p>\u4E0A\u9762\u4EE3\u7801\u539F\u7406\u662F: \u5728\u5F53\u524D\u63D0\u4EA4\u540E\u9762\uFF0C\u65B0\u589E\u4E00\u6B21\u63D0\u4EA4\uFF0C\u62B5\u6D88\u6389\u4E0A\u4E00\u6B21\u63D0\u4EA4\u5BFC\u81F4\u7684\u6240\u6709\u53D8\u5316\u3002\u5B83\u4E0D\u4F1A\u6539\u53D8\u8FC7\u53BB\u7684\u5386\u53F2\uFF0C\u6240\u4EE5\u662F\u9996\u9009\u65B9\u5F0F\uFF0C\u6CA1\u6709\u4EFB\u4F55\u4E22\u5931\u4EE3\u7801\u7684\u98CE\u9669\u3002</p><p><code>git revert</code> \u547D\u4EE4\u8FD8\u6709\u4E24\u4E2A\u53C2\u6570: - <code>--no-edit</code> \u6267\u884C\u65F6\u4E0D\u6253\u5F00\u9ED8\u8BA4\u7F16\u8F91\u5668\uFF0C\u76F4\u63A5\u4F7F\u7528 Git \u81EA\u52A8\u751F\u6210\u7684\u63D0\u4EA4\u4FE1\u606F\u3002 - <code>--no-commit</code> \u53EA\u62B5\u6D88\u6682\u5B58\u533A\u548C\u5DE5\u4F5C\u533A\u7684\u6587\u4EF6\u53D8\u5316\uFF0C\u4E0D\u4EA7\u751F\u65B0\u7684\u63D0\u4EA4\u3002</p><p>\u66FF\u6362\u4E0A\u4E00\u6B21\u63D0\u4EA4\uFF0C \u4F7F\u7528 <code>git commit --amend -m &quot;A new commit.&quot;</code> \u6765\u4FEE\u6539\u4E0A\u4E00\u6B21\u63D0\u4EA4\u7684\u4FE1\u606F\u3002</p><h2 id="\u64A4\u9500\u6587\u4EF6\u7684\u4FEE\u6539" tabindex="-1"><a class="header-anchor" href="#\u64A4\u9500\u6587\u4EF6\u7684\u4FEE\u6539" aria-hidden="true">#</a> \u64A4\u9500\u6587\u4EF6\u7684\u4FEE\u6539</h2><ol><li><p>\u6587\u4EF6\u6CA1\u6709\u6DFB\u52A0\u5230\u6682\u5B58\u533A(\u6CA1\u6709\u4F7F\u7528<code>git add </code>)</p><ul><li><code>git checkout -- &lt;file path&gt;</code> \u628A\u6587\u4EF6\u5728\u5DE5\u4F5C\u533A\u7684\u4FEE\u6539\u5168\u90E8\u64A4\u9500\uFF0C\u8FD9\u91CC\u6709\u4E24\u79CD\u60C5\u51B5\uFF1A <ul><li>\u4E00\u79CD\u662F\u81EA\u4FEE\u6539\u540E\u8FD8\u6CA1\u6709\u88AB\u653E\u5230\u6682\u5B58\u533A\uFF0C\u73B0\u5728\uFF0C\u64A4\u9500\u4FEE\u6539\u5C31\u56DE\u5230\u548C\u7248\u672C\u5E93\u4E00\u6A21\u4E00\u6837\u7684\u72B6\u6001\uFF1B</li><li>\u4E00\u79CD\u662F\u5DF2\u7ECF\u6DFB\u52A0\u5230\u6682\u5B58\u533A\u540E\uFF0C\u53C8\u4F5C\u4E86\u4FEE\u6539\uFF0C\u73B0\u5728\uFF0C\u64A4\u9500\u4FEE\u6539\u5C31\u56DE\u5230\u6DFB\u52A0\u5230\u6682\u5B58\u533A\u540E\u7684\u72B6\u6001\u3002</li></ul></li></ul></li><li><p>\u6587\u4EF6\u5DF2\u7ECF\u6DFB\u52A0\u5230\u6682\u5B58\u533A(\u4F7F\u7528<code>git add </code>\uFF0C \u5C1A\u672A\u4F7F\u7528<code>git commit</code>)</p><ul><li><code>git reset HEAD &lt;file&gt;</code> \u628A\u6682\u5B58\u533A\u7684\u4FEE\u6539\u64A4\u9500\u6389\uFF08<code>unstage</code>\uFF09\uFF0C\u91CD\u65B0\u653E\u56DE\u5DE5\u4F5C\u533A</li><li><code>git checkout -- &lt;file path&gt;</code> \u64A4\u9500\u5DE5\u4F5C\u533A\u4E2D\u6587\u4EF6\u7684\u4FEE\u6539</li></ul></li><li><p>\u6682\u5B58\u533A\u5185\u5BB9\u5DF2\u7ECF\u63D0\u4EA4\u5230\u5F53\u524D\u5206\u652F(\u4F7F\u7528<code>git commit</code>)</p><ul><li><code>git reset HEAD^</code> \u56DE\u9000\u5F53\u524D\u63D0\u4EA4\u5230\u5DE5\u4F5C\u533A</li><li><code>git checkout -- &lt;file path&gt;</code> \u64A4\u9500\u5DE5\u4F5C\u533A\u4E2D\u6587\u4EF6\u7684\u4FEE\u6539</li></ul></li></ol><h2 id="branches" tabindex="-1"><a class="header-anchor" href="#branches" aria-hidden="true">#</a> Branches</h2><h3 id="show-branch" tabindex="-1"><a class="header-anchor" href="#show-branch" aria-hidden="true">#</a> Show branch</h3><p>List local branches :</p><blockquote><p>git branch</p></blockquote><p>List remote branches:</p><blockquote><p>git branch -r</p></blockquote><p>List all branches (both local and remote)</p><blockquote><p>git branch -a</p></blockquote><h3 id="create-branch" tabindex="-1"><a class="header-anchor" href="#create-branch" aria-hidden="true">#</a> Create branch</h3><p>Create a branch with:</p><blockquote><p>git branch <code>&lt;branch-name&gt;</code></p></blockquote><p>Switch to a different branch with:</p><blockquote><p>git checkout <code>&lt;branch-name&gt;</code></p></blockquote><p>Create a branch and switch to it with:</p><blockquote><p>git checkout -b <code>&lt;branch-name&gt;</code></p></blockquote><h3 id="merge-branch" tabindex="-1"><a class="header-anchor" href="#merge-branch" aria-hidden="true">#</a> Merge branch</h3><p>Merge a specific branch to current with:</p><blockquote><p>git merge <code>&lt;branch-name&gt;</code></p></blockquote><h3 id="delete-branch" tabindex="-1"><a class="header-anchor" href="#delete-branch" aria-hidden="true">#</a> Delete branch</h3><p>Delete a local branch with:</p><blockquote><p>git branch -d <code>&lt;branch-name&gt;</code></p></blockquote><p>To delete a local branch that has not been merged to the current branch or an upstream:</p><blockquote><p>git branch -D <code>&lt;branch-name&gt;</code></p></blockquote><p>Delete a remote branch with:</p><blockquote><p>git push origin --delete <code>&lt;branch-name&gt;</code></p></blockquote><p>Or</p><blockquote><p>git push origin :<code>&lt;branch-name&gt;</code></p></blockquote><p>Delete multiple branches</p><blockquote><p>git branch | grep &#39;fix/&#39; | xargs git branch -d</p></blockquote><p>This will delete all branches that start with <code>fix/</code> .</p><h3 id="rename-branch" tabindex="-1"><a class="header-anchor" href="#rename-branch" aria-hidden="true">#</a> Rename branch</h3><p>To rename the current(local) branch:</p><blockquote><p>git branch -m <code>&lt;new-branch-name&gt;</code></p></blockquote><p>To rename a different(local) branch:</p><blockquote><p>git branch -m <code>&lt;old-branch-name&gt;</code> <code>&lt;new-branch-name&gt;</code></p></blockquote><h2 id="unstaged-edits" tabindex="-1"><a class="header-anchor" href="#unstaged-edits" aria-hidden="true">#</a> Unstaged Edits</h2><h3 id="i-want-to-move-my-unstaged-edits-to-a-different-existing-branch" tabindex="-1"><a class="header-anchor" href="#i-want-to-move-my-unstaged-edits-to-a-different-existing-branch" aria-hidden="true">#</a> I want to move my unstaged edits to a different, existing branch</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> stash
<span class="token function">git</span> checkout <span class="token operator">&lt;</span>exist-branch-name<span class="token operator">&gt;</span>
<span class="token function">git</span> stash pop
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="resolve-conflict" tabindex="-1"><a class="header-anchor" href="#resolve-conflict" aria-hidden="true">#</a> Resolve conflict</h2><p>If you want to keep one branch&#39;s version of the code, you can use <code>--ours</code> or <code>--theirs</code>.</p><blockquote><p>git checkout --ours <code>&lt;file-path&gt;</code></p></blockquote><p>If you want to resoleve conflic manually, first find the conflict content, then correct the content.</p><p>After resolved commit and push to remote.</p><h2 id="submodules" tabindex="-1"><a class="header-anchor" href="#submodules" aria-hidden="true">#</a> Submodules</h2><h3 id="clone-all-submodules" tabindex="-1"><a class="header-anchor" href="#clone-all-submodules" aria-hidden="true">#</a> Clone all submodules</h3><blockquote><p>git clone --recursive <code>&lt;url&gt;</code></p></blockquote><p>If already cloned</p><blockquote><p>git submodule update --init --recursive</p></blockquote><h3 id="remove-a-submodule" tabindex="-1"><a class="header-anchor" href="#remove-a-submodule" aria-hidden="true">#</a> Remove a submodule</h3><p>To remove a submodule with the following:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> submodule deinit <span class="token operator">&lt;</span>submodule-name<span class="token operator">&gt;</span>
<span class="token function">git</span> <span class="token function">rm</span> <span class="token operator">&lt;</span>submodule-name<span class="token operator">&gt;</span>
<span class="token function">git</span> <span class="token function">rm</span> --cached <span class="token operator">&lt;</span>submodule-name<span class="token operator">&gt;</span>
<span class="token function">git</span> -rf .git/modules/<span class="token operator">&lt;</span>submodule-name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="add-a-submodule" tabindex="-1"><a class="header-anchor" href="#add-a-submodule" aria-hidden="true">#</a> Add a submodule</h3><p>Add a submodule to your exist repository with:</p><blockquote><p>git submodule add <code>&lt;submodule-url&gt;</code> <code>&lt;path&gt;</code></p></blockquote><p><code>path</code> option means where you want to save the submodule, if empty the submodule will save in the root directory.</p><h3 id="update-submodule" tabindex="-1"><a class="header-anchor" href="#update-submodule" aria-hidden="true">#</a> Update submodule</h3><blockquote><p>git submodule update --remote</p></blockquote><h2 id="generate-publick-key" tabindex="-1"><a class="header-anchor" href="#generate-publick-key" aria-hidden="true">#</a> Generate publick key</h2><p>Generate a publish key with:</p><blockquote><p>ssh-keygen</p></blockquote><p>publick key usually located in the <code>~/.ssh</code> .</p><h2 id="tags" tabindex="-1"><a class="header-anchor" href="#tags" aria-hidden="true">#</a> Tags</h2><h3 id="show-tag" tabindex="-1"><a class="header-anchor" href="#show-tag" aria-hidden="true">#</a> Show tag</h3><p>Show the list of tags with:</p><blockquote><p>git tag</p></blockquote><p>Show a specific tag with:</p><blockquote><p>git tag <code>&lt;tag-name&gt;</code></p></blockquote><h3 id="create-tag" tabindex="-1"><a class="header-anchor" href="#create-tag" aria-hidden="true">#</a> Create tag</h3><p>Create a tag with:</p><blockquote><p>git tag -a <code>&lt;tag-name&gt;</code></p></blockquote><p>Or add some message with:</p><blockquote><p>git tag -a <code>&lt;tag-name&gt;</code> -m &#39;xxx&#39;</p></blockquote><p>Create a tag from previous commit with:</p><blockquote><p>git tag -a <code>&lt;tag-name&gt;</code> <code>&lt;commit-id&gt;</code></p></blockquote><p>Use the <code>git log</code> command to get the commit id</p><h3 id="push-tag" tabindex="-1"><a class="header-anchor" href="#push-tag" aria-hidden="true">#</a> Push tag</h3><p>Push a specific tag to remote with:</p><blockquote><p>git push origin <code>&lt;tag-name&gt;</code></p></blockquote><p>Push all the tags with:</p><blockquote><p>git push origin --tags</p></blockquote><h3 id="delete-tag" tabindex="-1"><a class="header-anchor" href="#delete-tag" aria-hidden="true">#</a> Delete tag</h3><p>Delete a local tag with:</p><blockquote><p>git tag -d <code>&lt;tag-name&gt;</code></p></blockquote><p>Delete remote tag:</p><blockquote><p>git push --delete origin <code>&lt;tag-name&gt;</code></p></blockquote><h2 id="git-ignore" tabindex="-1"><a class="header-anchor" href="#git-ignore" aria-hidden="true">#</a> Git ignore</h2><h3 id="ignore-files-before-commit" tabindex="-1"><a class="header-anchor" href="#ignore-files-before-commit" aria-hidden="true">#</a> Ignore files before commit</h3><p>Create a <code>.gitignore</code> file at the root directory of your repository.</p><p>Commit the <code>.gitignore</code> file and push it to remote.</p><p>Some rules about the <code>.gitignore</code> file:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># \u5FFD\u7565 .a \u6587\u4EF6</span>
*.a

<span class="token comment"># \u4F46\u5426\u5B9A\u5FFD\u7565 lib.a, \u5C3D\u7BA1\u5DF2\u7ECF\u5728\u524D\u9762\u5FFD\u7565\u4E86 .a \u6587\u4EF6</span>
<span class="token operator">!</span>lib.a

<span class="token comment"># \u4EC5\u5728\u5F53\u524D\u76EE\u5F55\u4E0B\u5FFD\u7565 TODO \u6587\u4EF6\uFF0C \u4F46\u4E0D\u5305\u62EC\u5B50\u76EE\u5F55\u4E0B\u7684 subdir/TODO</span>
/TODO

<span class="token comment"># \u5FFD\u7565 build/ \u6587\u4EF6\u5939\u4E0B\u7684\u6240\u6709\u6587\u4EF6</span>
build/

<span class="token comment"># \u5FFD\u7565 doc/notes.txt, \u4E0D\u5305\u62EC doc/server/arch.txt</span>
doc/*.txt

<span class="token comment"># \u5FFD\u7565\u6240\u6709\u7684 .pdf \u6587\u4EF6 \u5728 doc/ directory \u4E0B\u7684</span>
doc/**/*.pdf
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="ignore-files-after-committed" tabindex="-1"><a class="header-anchor" href="#ignore-files-after-committed" aria-hidden="true">#</a> Ignore files after committed</h3><p>First remove the file from you local cache:</p><blockquote><p>git rm --cached <code>&lt;file-path&gt;</code></p></blockquote><p>Then create a <code>.gitignore</code> file and edit the ignore rules</p><p>Finally push it to remote with:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>
<span class="token function">git</span> commit -m <span class="token string">&quot;xxx&quot;</span>
<span class="token function">git</span> push
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="commits" tabindex="-1"><a class="header-anchor" href="#commits" aria-hidden="true">#</a> Commits</h2><h3 id="what-did-i-commit" tabindex="-1"><a class="header-anchor" href="#what-did-i-commit" aria-hidden="true">#</a> What did I commit?</h3><p>Show the latest commit on your current HEAD with:</p><blockquote><p>git show</p></blockquote><p>Or</p><blockquote><p>git log -n1 -p</p></blockquote><p>Or</p><blockquote><p>git log --pretty=oneline</p></blockquote><p>See a file at a specific commit with:</p><blockquote><p>git show <code>&lt;commit-id&gt;</code>:<code>&lt;file-name&gt;</code></p></blockquote><h3 id="i-wrote-the-wrong-thing-in-a-commit-message" tabindex="-1"><a class="header-anchor" href="#i-wrote-the-wrong-thing-in-a-commit-message" aria-hidden="true">#</a> I wrote the wrong thing in a commit message</h3><p>If you wrote the wrong thing and the commit has not yet been pushed, you can do the following to change the commit message without changing the changes in the commit:</p><blockquote><p>git commit --amend --only</p></blockquote><p>This will open your default text editor, where you can edit the message.</p><p>On the other hand, you can do this all in one command:</p><blockquote><p>git commit --amend --only -m &#39;xxx&#39;</p></blockquote><h3 id="i-want-to-remove-a-file-form-the-previous-commit" tabindex="-1"><a class="header-anchor" href="#i-want-to-remove-a-file-form-the-previous-commit" aria-hidden="true">#</a> I want to remove a file form the previous commit</h3><p>In order to remove changes for a file form the previous commit, do the following:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">git</span> checkout HEAD^ myfile
$ <span class="token function">git</span> <span class="token function">add</span> myfile
$ <span class="token function">git</span> commit --amend --on-edit
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>In case the file was newly added to the commit and you want to remove it(from Git alone), do:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">git</span> <span class="token function">rm</span> --cached myfile
$ <span class="token function">git</span> commit --amend --no-edit
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>The <code>--no-edit</code> option is used to keep the existing commit message.</p><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference" aria-hidden="true">#</a> Reference</h2>`,130),x={href:"https://git-scm.com/book/en/v2",target:"_blank",rel:"noopener noreferrer"},w=a("git-book"),v={href:"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000",target:"_blank",rel:"noopener noreferrer"},_=a("git \u6559\u7A0B"),y={href:"https://git-scm.com/book/zh/v1/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84-Git-%E7%94%9F%E6%88%90-SSH-%E5%85%AC%E9%92%A5",target:"_blank",rel:"noopener noreferrer"},E=a("\u751F\u6210 SSH \u516C\u94A5"),A={href:"https://github.com/k88hudson/git-flight-rules",target:"_blank",rel:"noopener noreferrer"},D=a("git flight rules");function I(S,C){const t=s("ExternalLinkIcon");return c(),i(r,null,[h,e("ol",null,[u,e("li",null,[e("p",null,[b,m,e("a",g,[k,n(t)])]),f])]),q,e("p",null,[e("a",x,[w,n(t)])]),e("p",null,[e("a",v,[_,n(t)])]),e("p",null,[e("a",y,[E,n(t)])]),e("p",null,[e("a",A,[D,n(t)])])],64)}var O=l(p,[["render",I]]);export{O as default};
