import{r as a,o as r,c as s,a as e,e as t,F as d,d as l,b as i}from"./app.01142347.js";import{_ as o}from"./plugin-vue_export-helper.21dcd24c.js";const c={},u=l(`<h3 id="\u57FA\u672C\u6570\u636E\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u6570\u636E\u7C7B\u578B" aria-hidden="true">#</a> \u57FA\u672C\u6570\u636E\u7C7B\u578B</h3><p align="right">2018-12-28</p><p><strong>TypeScript \u652F\u6301\uFF1A</strong><code>boolean</code>\uFF0C<code>number</code>\uFF0C<code>string</code>\uFF0C<code>Array</code>\uFF0C<code>Tuple</code>\uFF0C<code>Enum</code>\uFF0C<code>Any</code>\uFF0C <code>Void</code>\uFF0C<code>Never</code>\uFF0C<code>Object</code>\u7B49\u7C7B\u578B\u3002</p><h5 id="_1-boolean" tabindex="-1"><a class="header-anchor" href="#_1-boolean" aria-hidden="true">#</a> 1. Boolean</h5><p>\u57FA\u672C\u6570\u636E\u7C7B\u578B\uFF0C\u8868\u793A<code>true/false</code> \u3002</p><h5 id="_2-number" tabindex="-1"><a class="header-anchor" href="#_2-number" aria-hidden="true">#</a> 2. Number</h5><p>\u57FA\u672C\u6570\u636E\u7C7B\u578B\uFF0C\u652F\u630110\u8FDB\u5236\uFF0C16\u8FDB\u5236\u6570\u503C\uFF0C \u4E5F\u652F\u6301\u4E8C\u8FDB\u5236\u548C\u516B\u8FDB\u5236\u6570\u503C(<strong>ECMAScript 2015)</strong>.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>let decimal: number = 6;
let hex: number = 0xf00d;
let binary: number = 0b1010;
let octal: number = 0o744;
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h5 id="_3-string" tabindex="-1"><a class="header-anchor" href="#_3-string" aria-hidden="true">#</a> 3. String</h5><p>\u57FA\u672C\u6570\u636E\u7C7B\u578B\uFF0C\u4F7F\u7528\u53CC\u5F15\u53F7\u6216\u8005\u5355\u5F15\u53F7\u8868\u8FBE\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>let color: string = &quot;blue&quot;;
color = &#39;red&#39;;
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>\u652F\u6301\u6A21\u677F\u5B57\u7B26\u4E32</strong> \u4F7F\u7528\u53CD\u5F15\u53F7\u8868\u8FBE\uFF0C\u53EF\u4EE5\u8DE8\u884C\uFF0C\u4E5F\u53EF\u4EE5\u5D4C\u5165\u8868\u8FBE\u5F0F <code>\${expr}</code></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>let fullName: string = \`Bob Bobbington\`;
let age: number = 37;
let sentence: string = \`Hello, my name is \${ fullName }.

I&#39;ll be \${ age + 1 } years old next month.\`;
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h5 id="_4-array" tabindex="-1"><a class="header-anchor" href="#_4-array" aria-hidden="true">#</a> 4. Array</h5><p>\u57FA\u672C\u6570\u636E\u7C7B\u578B\uFF0C \u7528\u4E24\u79CD\u8868\u8FBE\u5F62\u5F0F\u3002</p><p>\u7B2C\u4E00\u79CD\uFF1A\u5143\u7D20\u7C7B\u578B\u540E\u9762\u8DDF<code>[]</code></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>let list: number[] = [1, 2, 3];
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u7B2C\u4E8C\u79CD\uFF1A \u4F7F\u7528\u6A21\u677F\u7C7B\u578B</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>let list: Array&lt;number&gt; = [1, 2, 3];
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h5 id="_5-tuple" tabindex="-1"><a class="header-anchor" href="#_5-tuple" aria-hidden="true">#</a> 5. Tuple</h5><p>\u5143\u7EC4\uFF0C\u7C7B\u4F3C\u6570\u7EC4\uFF0C\u8868\u793A\u4E00\u5B9A\u6570\u91CF\u7684\u5143\u7D20\u96C6\u5408\uFF0C \u4F46\u662F\u6BCF\u4E2A\u5143\u7D20\u7C7B\u578B\u4E0D\u5FC5\u76F8\u540C</p><h5 id="_6-enum" tabindex="-1"><a class="header-anchor" href="#_6-enum" aria-hidden="true">#</a> 6. Enum</h5><p>\u5BF9Javascript\u7684\u6570\u636E\u7C7B\u578B\u7684\u8865\u5145\uFF0C \u4F7F\u7528<code>enum</code>\u5173\u952E\u5B57\u5F00\u5934\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>enum Color {Red, Green, Blue}
let c: Color = Color.Green;
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u9ED8\u8BA4\u5F00\u59CB\u7684\u503C\u662F0\uFF0C \u4F46\u662F\u53EF\u4EE5\u624B\u52A8\u7684\u8BBE\u7F6E\u67D0\u4E00\u4E2A\u6216\u8005\u6240\u6709\u7684\u503C\u3002</p><p><strong>\u5B83\u53EF\u4EE5\u4ECE\u6570\u503C\u8F6C\u6362\u5230\u8BE5\u503C\u503C\u679A\u4E3E\u4E2D\u7684\u540D\u79F0</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>enum Color {Red = 1, Green, Blue}
let colorName: string = Color[2];

console.log(colorName); // Displays &#39;Green&#39; as its value is 2 above
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h5 id="_7-any" tabindex="-1"><a class="header-anchor" href="#_7-any" aria-hidden="true">#</a> 7. Any</h5><p>\u8868\u793A\u4EFB\u610F\u7C7B\u578B\uFF0C\u4F1A\u5FFD\u7565\u7C7B\u578B\u68C0\u67E5\u3002</p><h5 id="_8-void" tabindex="-1"><a class="header-anchor" href="#_8-void" aria-hidden="true">#</a> 8. Void</h5><p>\u8DDF<code>Any</code>\u7C7B\u578B\u76F8\u53CD\uFF0C \u8868\u793A\u6CA1\u6709\u7C7B\u578B\uFF0C \u4E00\u822C\u7528\u4F5C\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\u3002</p><h5 id="_9-null-and-undefined" tabindex="-1"><a class="header-anchor" href="#_9-null-and-undefined" aria-hidden="true">#</a> 9. Null and Undefined</h5><p>\u5728<code>TypeScript</code>\u4E2D\uFF0C <code>undefined</code>\u548C<code>null</code> \u5B9E\u9645\u4E0A\u62E5\u6709\u81EA\u5DF1\u7684\u7C7B\u578B\uFF0C\u5206\u522B\u53EB\u505A<code>undefined</code>\u548C<code>null</code>\u3002</p><p>\u9ED8\u8BA4<code>undefined</code>\u548C<code>null</code>\u662F\u5176\u4ED6\u7C7B\u578B\u7684\u5B50\u7C7B\u578B\uFF0C \u53EF\u4EE5\u628A\u4ED6\u4EEC\u8D4B\u503C\u7ED9\u5176\u4ED6\u7C7B\u578B\uFF1B</p><h5 id="_10-never" tabindex="-1"><a class="header-anchor" href="#_10-never" aria-hidden="true">#</a> 10. Never</h5><p><code>never</code>\u8868\u793A\u7ED9\u7C7B\u578B\u7684\u503C\u4ECE\u6765\u4E0D\u4F1A\u51FA\u73B0\uFF0C \u4E00\u822C\u7528\u4F5C\u51FD\u6570\u8FD4\u56DE\u503C\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>The never type represents the type of values that never occur.
For instance, never is the return type for a function expression or an arrow function expression that always throws an exception or one that never returns;
Variables also acquire the type never when narrowed by any type guards that can never be true.
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h5 id="_11-object" tabindex="-1"><a class="header-anchor" href="#_11-object" aria-hidden="true">#</a> 11. Object</h5><p><code>Object</code> \u8868\u793A\u975E\u57FA\u672C\u7C7B\u578B\uFF0C\u8868\u793A\u9664<code>number</code>, <code>string</code>, <code>boolean</code>, <code>symbol</code>, <code>null</code>, <code>undefined</code>\u7B49\u4E4B\u5916\u7684\u6570\u636E\u7C7B\u578B\u3002 \u5B98\u7F51\u89E3\u91CA\u5982\u4E0B:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>object is a type that represents the non-primitive type, i.e.
any thing that is not number, string, boolean, symbol, null, or undefined.
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><code>Object</code> \u5141\u8BB8\u4EFB\u4F55\u53D8\u91CF\u7684\u503C\u7ED9\u5B83\u8D4B\u503C\uFF0C \u4F46\u662F\u4E0D\u80FD\u8C03\u7528\u5B83\u5176\u4E2D\u7684\u65B9\u6CD5\uFF0C\u5373\u4F7F\u8BE5\u65B9\u6CD5\u5DF2\u7ECF\u5B58\u5728\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>let prettySure: Object = 4;
prettySure.toFixed(); // Error: Property &#39;toFixed&#39; doesn&#39;t exist on type &#39;Object&#39;.
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h5 id="_12-\u7C7B\u578B\u8F6C\u6362" tabindex="-1"><a class="header-anchor" href="#_12-\u7C7B\u578B\u8F6C\u6362" aria-hidden="true">#</a> 12. \u7C7B\u578B\u8F6C\u6362</h5><p>\u4E0D\u6267\u884C\u6570\u636E\u68C0\u67E5\uFF0C\u5BF9\u8FD0\u884C\u65F6\u6CA1\u6709\u5F71\u54CD\uFF0C\u53EA\u7531\u7F16\u8BD1\u5668\u4F7F\u7528\u3002 \u7C7B\u578B\u8F6C\u6362\u6709\u4E24\u79CD\u8868\u73B0\u5F62\u5F0F\u3002 \u7B2C\u4E00\u79CD\u662F\u5C16\u62EC\u53F7\u7684\u8BED\u6CD5\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>let someValue: any = &quot;this is a string&quot;;
let strLength: number = (&lt;string&gt;someValue).length;
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u7B2C\u4E8C\u79CD\u662F<code>as</code>\u8BED\u6CD5(<strong>\u63A8\u8350\u4F7F\u7528\u8BE5\u8BED\u6CD5</strong>):</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>let someValue: any = &quot;this is a string&quot;;
let strLength: number = (someValue as string).length;
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h5 id="\u53C2\u8003\u8D44\u6599" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u8D44\u6599" aria-hidden="true">#</a> \u53C2\u8003\u8D44\u6599</h5>`,48),p={href:"https://www.typescriptlang.org/docs/handbook/basic-types.html",target:"_blank",rel:"noopener noreferrer"},b=i("basic-types");function h(m,g){const n=a("ExternalLinkIcon");return r(),s(d,null,[u,e("ol",null,[e("li",null,[e("a",p,[b,t(n)])])])],64)}var _=o(c,[["render",h]]);export{_ as default};
